{"version":3,"sources":["components/TodoItem.module.css","components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/Navbar.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/TodoContainer.js","reportWebVitals.js","index.js"],"names":["module","exports","TodoItem","props","todo","completed","id","title","useState","edit","state","setState","viewMode","editMode","display","className","styles","item","onDoubleClick","e","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","textDecoration","value","setUpdate","target","onKeyDown","event","key","TodosList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","Navbar","path","text","link","to","activeClassName","exact","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","NoMatch","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","useEffect","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","NotMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47b20ba6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\",\"checkbox\":\"TodoItem_checkbox__HTI3f\"};","import React ,{useState}from \"react\"\nimport styles from \"./TodoItem.module.css\";\nimport { FaTrash } from \"react-icons/fa\";\n\nconst TodoItem = (props)=> {\n\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#595959\",\n        opacity: 0.4,\n        textDecoration: \"line-through\",\n      };\n      const { completed, id, title } = props.todo;\n      const [state, setState] = useState({\n        edit:false\n      });\n    \n\n     const handleEditing = (e)=> {\n        setState({...state,edit:true});\n      }\n      let viewMode = {}\n      let editMode = {}\n\n      if (state.edit) {\n      viewMode.display = \"none\"\n      } else {\n      editMode.display = \"none\"\n      }\n     const handleUpdatedDone = event => {\n        if (event.key === \"Enter\") {\n          setState({ edit: false })\n        }\n      }\n    return (\n        <li className={styles.item}>\n          <div onDoubleClick = {handleEditing} style={viewMode}>\n            <input\n              type=\"checkbox\"\n              className={styles.checkbox}\n              checked={completed}\n              onChange={() => props.handleChangeProps(id)}\n            />\n            <button onClick={() => props.deleteTodoProps(id)}>\n            <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\n            </button>\n            <span style={completed ? completedStyle : null}>\n\n            {title}\n            </span>\n          </div>\n\n          <input type=\"text\"\n           style={editMode}\n           className=\"textInput\"\n           value={title}\n           onChange={e => {\n            props.setUpdate(e.target.value, id)\n          }}\n          onKeyDown={handleUpdatedDone} />\n        </li>\n      )\n  \n}\n\nexport default TodoItem","import React from 'react';\nimport TodoItem from './TodoItem';\nconst TodosList = (props) => {\n    return (\n      <ul>\n        {props.todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo}\n             handleChangeProps={props.handleChangeProps} \n             deleteTodoProps={props.deleteTodoProps}\n             setUpdate={props.setUpdate}/>\n        ))}\n      </ul>\n    );\n  }\n\nexport default TodosList;\n","import React from \"react\"\n\nconst Header = () => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n  }\n  return (\n    <header style={headerStyle}>\n    <h1\n      style={{\n        fontSize: \"6rem\",\n        fontWeight: \"600\",\n        marginBottom: \"2rem\",\n        lineHeight: \"1em\",\n        color: \"#ececec\",\n        textTransform: \"lowercase\",\n        textAlign: \"center\",\n      }}\n    >\n      todos\n    </h1>\n  </header>\n  )\n}\n\nexport default Header","import React, { useState } from \"react\"\nimport {FaPlusCircle} from 'react-icons/fa'\nconst InputTodo = props => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  })\n\n  const onChange = e => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title)\n      setInputText({\n        title: \"\",\n      })\n    } else {\n      alert(\"Please write item\")\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button className=\"input-submit\"> <FaPlusCircle style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}/></button>\n    </form>\n  )\n}\n\nexport default InputTodo","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n    const links = [\n        {\n          id: 1,\n          path: \"/\",\n          text: \"Home\",\n        },\n        {\n          id: 2,\n          path: \"/about\",\n          text: \"About\",\n        },\n      ]\n      return (\n        <nav className=\"navBar\">\n            <ul>\n            {links.map(link => {\n                return (\n                    <li key={link.id}>\n                    <NavLink to={link.path} activeClassName=\"active-link\" exact>\n                        {link.text}\n                    </NavLink>\n                    </li>\n                )\n            })}\n            </ul>\n      </nav>\n      )\n\n}\n\nexport default Navbar","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nconst SinglePage = () => {\n    const aboutData = [\n        {\n          slug: \"about-app\",\n          title: \"About the App\",\n          description:\n            \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\n        },\n        {\n          slug: \"about-author\",\n          title: \"About the Author\",\n          description:\n            \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\n        },\n      ]  \n    const { slug } = useParams();\n    const aboutContent = aboutData.find(item => item.slug === slug);\n    const { title, description } = aboutContent  ;\n    return (\n        <div>\n          <h1>{title}</h1>\n          <p>{description}</p>\n        </div>\n      )\n}\nexport default SinglePage","import React from 'react';\nimport { Link, useRouteMatch, Route } from \"react-router-dom\";\nimport SinglePage from \"./SinglePage\";\n\nconst About = ()=>{\n    const { url, path } = useRouteMatch();\n    return (\n        <div>\n          <ul>\n            <li>\n              <Link to={`${url}/about-app`}>About App</Link>\n            </li>\n            <li>\n              <Link to={`${url}/about-author`}>About Author</Link>\n            </li>\n          </ul>\n          <Route path={`${path}/:slug`}>\n            <SinglePage />\n          </Route>\n        </div>\n      )}\n\nexport default About","import React from 'react';\n\nconst NoMatch = () => {\n    return (\n        <div>\n          <h3>No match for this page</h3>\n        </div>\n      )\n}\nexport default NoMatch","import React, {useState,useEffect} from 'react';\nimport TodosList from './TodosList';\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport Navbar from './Navbar';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport NotMatch from \"../pages/NotMatch\";\n\nimport '../App.css';\n\nconst TodoContainer = ()=>{\n  const [todos, setTodos] = useState(getInitialTodos())\n\n  const handleChange = id => {\n    setTodos(prevState =>\n      prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo\n      })\n    )\n  }\n\n  const delTodo = id => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      }),\n    ])\n  }\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    }\n    setTodos([...todos, newTodo])\n  }\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = updatedTitle\n        }\n        return todo\n      })\n    )\n  }\n  function getInitialTodos() {\n    // getting stored items\n    const temp = localStorage.getItem(\"todos\")\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || []\n  }\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n  return (\n    <>\n    <Navbar />\n    <Switch>\n    <Route exact path=\"/\">\n      <div className=\"container\">\n        <div className=\"inner\">\n          <Header />\n          <InputTodo addTodoProps={addTodoItem} />\n          <TodosList\n            todos={todos}\n            handleChangeProps={handleChange}\n            deleteTodoProps={delTodo}\n            setUpdate={setUpdate}\n          />\n        </div>\n      </div>\n    </Route>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"*\">\n      <NotMatch />\n    </Route>\n    </Switch>\n    </>\n  )\n}\n\nexport default TodoContainer","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// import App from './App';\nimport TodoContainer from './components/TodoContainer';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}